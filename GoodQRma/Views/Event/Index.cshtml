@model IEnumerable<GoodQRma.Models.Event>

@{
    ViewBag.Title = "Index";
    List<string> addresses = new List<string>();
    foreach (var i in Model)
    {
        addresses.Add(i.getFullAddress());
    }
}

<h2>Here's where to find GoodQRma!</h2>
<!DOCTYPE html>
<html>
<head>
    <title>Find GoodQRma</title>
    <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
    <script>
        var list1 = [];
        var bounds = new google.maps.LatLng();

        function listToArray() {
            @foreach(var x in addresses)
        {
            @:list1.push("@x");
                                    }
        }
        listToArray();
        //alert(list1.join('\n'));
        var geocoder;
        var map;
        function initialize() {
            geocoder = new google.maps.Geocoder();
            var latlng = new google.maps.LatLng(42.3314, -83.0458);
            var mapOptions = {
                zoom: 10,
                center: latlng,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            }
            map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
            setMarkers();
        }

        function setMarkers() {
            for (var i = 0; i < list1.length; i++) {
                geocoder.geocode({ 'address': list1[i] }, function (results, status) {
                    if (status == google.maps.GeocoderStatus.OK) {
                        map.setCenter(results[0].geometry.location);
                        //alert(results[0].geometry.location);
                        var marker = new google.maps.Marker({
                            map: map,
                            position: results[0].geometry.location,
                        });
                    } else {
                        alert('Geocode was not successful for the following reason: ' + status);
                    }
                });
            }

        }

        google.maps.event.addDomListener(window, 'load', initialize);
    </script>
</head>
<body>
    <div id="map-canvas" style="width:100%;height:300px;"></div>
</body>





<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
       
        <th>
            @Html.DisplayNameFor(model => model.name)
        </th>
       
        <th>
            @Html.DisplayNameFor(model => model.eventType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.eventDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.eventTime)
        </th>
       
        <th>
            @Html.DisplayNameFor(model => model.address1)
        </th>
       
        <th>
            @Html.DisplayNameFor(model => model.city)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.state)
        </th>
        
        
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
       
        <td>
            @Html.DisplayFor(modelItem => item.name)
        </td>
       
        <td>
            @Html.DisplayFor(modelItem => item.eventType)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.eventDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.eventTime)
        </td>
      
        <td>
            @Html.DisplayFor(modelItem => item.address1)
        </td>
        
        <td>
            @Html.DisplayFor(modelItem => item.city)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.state)
        </td>
       
      
       
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.eventID }) |
            @Html.ActionLink("Details", "Details", new { id=item.eventID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.eventID })
        </td>
    </tr>
}

</table>
